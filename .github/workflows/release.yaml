name: Release

on:
  push:
    tags:
      - 'ver-*'
  workflow_dispatch:

env:
  BUILD_TYPE: Release

jobs:
  build-linux:
    runs-on: ubuntu-22.04 # For better compatibility

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libcurl4 libcurl4-openssl-dev libssl-dev ninja-build

      - name: Configure CMake
        run: |
          cmake \
            -B ${{ github.workspace }}/build \
            -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} \
            -GNinja

      - name: Build
        run: |
          cmake --build ${{github.workspace}}/build --target srtc_cmdline_demo

      - name: Package
        run: |
          mkdir -p release
          cp ${{ github.workspace }}/build/srtc_cmdline_demo release/
          cd release
          strip srtc_cmdline_demo || true
          tar -czvf srtc_cmdline_demo-linux.tar.gz srtc_cmdline_demo

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: srtc_cmdline_demo-linux
          path: release/srtc_cmdline_demo-linux.tar.gz

  build-macos:
    runs-on: macos-15 # For better compatibility

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          brew install openssl curl ninja

      - name: Configure CMake
        run: |
          cmake \
            -B ${{ github.workspace }}/build \
            -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} \
            -DOPENSSL_ROOT_DIR=$(brew --prefix openssl) \
            -GNinja

      - name: Build
        run: |
          cmake --build ${{ github.workspace }}/build --target srtc_cmdline_demo

      - name: Package
        run: |
          mkdir -p release
          cp ${{ github.workspace }}/build/srtc_cmdline_demo release/
          cd release
          strip srtc_cmdline_demo || true
          tar -czvf srtc_cmdline_demo-macos.tar.gz srtc_cmdline_demo

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: srtc_cmdline_demo-macos
          path: release/srtc_cmdline_demo-macos.tar.gz

  build-windows:
    runs-on: windows-2022

    steps:
      - uses: actions/checkout@v4

      - name: Use the MSVC compiler
        uses: ilammy/msvc-dev-cmd@v1

      - name: Configure CMake
        run: |
          cmake `
            -B ${{github.workspace}}/build `
            -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} `
            -DSRTC_BUILD_TESTS=OFF `
            -GNinja

      - name: Build
        run: |
          cmake `
            --build ${{github.workspace}}/build `
            --target srtc `
            --target srtc_cmdline_demo

      - name: Package
        run: |
          mkdir -p release
          cp ${{ github.workspace }}/build/srtc_cmdline_demo.exe release/
          cd release
          7z a -tzip srtc_cmdline_demo-windows.zip srtc_cmdline_demo.exe

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: srtc_cmdline_demo-windows
          path: release/srtc_cmdline_demo-windows.zip

  video-files:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Package
        run: |
          mkdir -p release
          cp ${{ github.workspace }}/*.h264 release/

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: video-files
          path: release

  create-release:
    needs: [ build-linux, build-macos, build-windows, video-files ]
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: ls -R artifacts

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            artifacts/srtc_cmdline_demo-linux/srtc_cmdline_demo-linux.tar.gz
            artifacts/srtc_cmdline_demo-macos/srtc_cmdline_demo-macos.tar.gz
            artifacts/srtc_cmdline_demo-windows/srtc_cmdline_demo-windows.zip
            artifacts/video-files/sintel.h264
            artifacts/video-files/sintel_with_slices.h264
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
