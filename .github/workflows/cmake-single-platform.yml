name: CMake on a single platform

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: RelWithDebInfo

jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-24.04, ubuntu-22.04 ]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Check compilers
      run: |
        which gcc
        which g++
        which clang
        which clang++

    - name: Install libcurl
      run: |
        sudo apt-get update && sudo apt-get install -y libcurl4t64 libcurl4-openssl-dev ninja-build

    - name: Configure CMake for gcc
      run: |
        cmake \
          -B ${{github.workspace}}/build-gcc \
          -DCMAKE_C_COMPILER=/usr/bin/gcc \
          -DCMAKE_CXX_COMPILER=/usr/bin/g++ \
          -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
          -GNinja

    - name: Build
      run: |
        cmake \
          --build ${{github.workspace}}/build-gcc \
          --config ${{env.BUILD_TYPE}} \
          --target srtc \
          --target srtc_test \
          --target cmdline_demo

    - name: Test
      run: |
        ${{github.workspace}}/build-gcc/srtc_test

    - name: Configure CMake for clang
      run: |
        cmake \
          -B ${{github.workspace}}/build-clang \
          -DCMAKE_C_COMPILER=/usr/bin/clang \
          -DCMAKE_CXX_COMPILER=/usr/bin/clang++ \
          -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
          -GNinja

    - name: Build
      run: |
        cmake \
          --build ${{github.workspace}}/build-clang \
          --config ${{env.BUILD_TYPE}} \
          --target srtc \
          --target srtc_test \
          --target cmdline_demo

    - name: Test
      run: |
        ${{github.workspace}}/build-clang/srtc_test
